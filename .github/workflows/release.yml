name: release-version

on:
  push:
    tags:
      - v*.*.*

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gnome-calculator
          docker pull selenium/standalone-chrome-debug
          docker pull selenium/standalone-firefox-debug
          docker run -d -p 4444:4444 selenium/standalone-firefox-debug
          docker run -d -p 4445:4444 selenium/standalone-chrome-debug
      - run: npm ci
      - run: npm run build
      - run: npm run coverage:clean
      - name: run unit tests
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npm test -- --runInBand --ci --bail
        env:
          FIREFOX_WD_URL: http://localhost:4444/wd/hub
          CHROME_WD_URL: http://localhost:4445/wd/hub
      - name: run integration tests
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npm run test:it
      - name: Merge coverage report
        run: |
          npm run coverage:merge
          npm run coverage:merge-report

  e2e-test:
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x
      - name: Install dependencies [Linux]
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libxt-dev libxtst-dev libpng++-dev libxinerama-dev
      - run: npm ci
      - run: npm run build
      - name: Run e2e tests [Linux]
        if: runner.os == 'Linux'
        run: xvfb-run --server-args="-screen 0, 1920x1080x24" npm run test:e2e
        shell: bash
        env:
          LOG_MODE: "ci"
      - name: Run e2e tests [Windows]
        if: runner.os == 'Windows'
        run: npm run test:e2e
        shell: powershell
        env:
          LOG_MODE: "ci"
      - name: save error screenshots on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: error-screenshots
          path: |
            ./packages/e2e/e2e-suite-chrome/_logs/_screenshots
            ./packages/e2e/e2e-suite-firefox/_logs/_screenshots

  release-version:
    name: release-version
    needs: [test, e2e-tests]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: "0"
      - run: git fetch origin +refs/tags/*:refs/tags/*
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm run build
      - name: Run Typedoc
        run: npx lerna run typedoc
      - name: Publish tagged release
        run: npm run lerna:publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish typedocs to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3.7.3
        with:
          github_token: ${{ secrets.SAKULIDEV_TOKEN }}
          external_repository: sakuli/apidoc
          publish_dir: ./docs
      - name: Trigger Docker build
        uses: mvasigh/dispatch-action@1.1.6
        with:
          token: ${{ secrets.SAKULIDEV_TOKEN }}
          repo: sakuli-docker
          owner: sakuli
          event_type: build-latest
